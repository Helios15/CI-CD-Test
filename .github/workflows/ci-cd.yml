name: CI/CD counter app

on:
  push:
    branches: [main]

jobs:
  #Build first, deploy later
  Build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

  Deploy:
    needs: Build
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: Set up Node.js 16.x
        uses: actions/setup-node@v2.1.5
        with:
          node-version: '16'
      - name: Install dependencies
        run: yarn

      - name: Build the project
        run: yarn build
      - name: Install NVM
        run: curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.0/install.sh | bash
      - name: Access NVM
        run: source ~/.bashrc
      - name: Choose node version
        run: source ~/.nvm/nvm.sh && nvm use 16.17.0
      # Connect to server using appleboy/ssh-action@master, allow to ssh to server remotely
      - name: Set up nvm
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_IP }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.AWS_SECRET_KEY}}
          script: |
            curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.0/install.sh | bash
            source ~/.bashrc

      - name: Connect to server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_IP }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.AWS_SECRET_KEY}}
          script: |
            cd CI-CD/CI-CD-Test/
            git -c "user.name=${{ secrets.GIT_NAME }}" -c "user.password=${{ secrets.GIT_SECRET_KEY }}" pull origin main
            yarn

      - name: Build productiom
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_IP }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.AWS_SECRET_KEY}}
          script: |
            cd CI-CD/CI-CD-Test/
            yarn build

      - name: Restart PM2
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_IP }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.AWS_SECRET_KEY}}
          script: |
            cd CI-CD/CI-CD-Test/
            pm2 restart 0
            pm2 log 0
